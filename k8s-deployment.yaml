# NodePort Service for frontend
apiVersion: v1
kind: Service
metadata:
  name: enitoolkit-fe-svc
spec:
  type: NodePort
  selector:
    app: enitoolkit-fe
  ports:
  - protocol: TCP
    port: 80
    targetPort: eni-fe-port
    nodePort: 30080
---
#NodePort Service for backend
apiVersion: v1
kind: Service
metadata:
  name: enitoolkit-be-svc
spec:
  type: NodePort
  selector:
    app: enitoolkit-be
  ports:
  - protocol: TCP
    port: 8080
    targetPort: eni-be-port
    nodePort: 30081
---
#ClusterIP service for redis
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis-stack-server
  ports:
  - port: 6379
    targetPort: 6379
---
# Deployment for frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enitoolkit-fe
spec:
  replicas: 1
  selector:
    matchLabels:
      app: enitoolkit-fe
  template:
    metadata:
      labels:
        app: enitoolkit-fe
    spec:
      containers:
      - name: enitools-fe
        image: vesso/enitoolkit:latest
        ports:
        - containerPort: 80
          name: eni-fe-port
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
---
# Deployment for backend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: enitoolkit-be
spec:
  replicas: 1
  selector:
    matchLabels:
      app: enitoolkit-be
  template:
    metadata:
      labels:
        app: enitoolkit-be
    spec:
      containers:
      - name: enitools-be
        image: vesso/enitoolkitdotnet:latest
        ports:
        - containerPort: 8080
          name: eni-be-port
        resources:
          limits:
            cpu: 750m
            memory: 512Mi
          requests:
            cpu: 250m
            memory: 256Mi
---
# Deploymenty for Redis Stack (for backend output caching)
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-stack-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis-stack-server
  template:
    metadata:
      labels:
        app: redis-stack-server
    spec:
      containers:
      - name: redis-stack-server
        image: redis/redis-stack-server:latest
        resources:
          limits:
            memory: "512Mi"
            cpu: "500m"
        ports:
        - containerPort: 6379
